
%==============================================================================================================================================================%
%
% This file shows time spent on main funtions of a dmrg iteration step measured in seconds (real time so speedup due to parallalizetion, number of cores
% etc can also be monitored.
% Variables used below:
% M number of block states/bond dimension
% N NUmber of sites/orbitals
%
%
% Iter     Dmrg iteration number. The corresponding size of left and right block can be taken from file Eexpt.out
%
% psi_ind  Function to construct 2,3, or 4 index tensor representation of the wavefunction in quantum number sector decomposed form. This scales with M.
%
% vsum     Function to collect terms from the V and T integrals for pre-summations. This scales with N. The time is basically the same for all iteration
%          steps.
%
% hamtab   Function to form the subsystem operator decompostion of the Hamiltonian. For most of the models this is determined for Iter = 1 and only some
%          slight modifications are performed for later steps. In case of condensed matter and more complex applications this is recaluclated in every
%          iteration step. This function also performs partiall summations to generate auxiliary operators. This scales with N and M.
%
% tasktab  Function to form Tasktable for each row of the subsystem decomposed Hamiltonian. All parallelizations are based on these Tasktables.
%          In case if site operators decompose into one-dimensional sectors only, this also precalualte contributions of site operators
%          when Heff*Psi is performed in order to reduce computational complexity.
%          This scales with number of sectors, proportional to M and number of symmetries.
%
% LBlock   This form kronecker product of left block and site. This is used only when code is executed with LR mode. This is a very old version
%          kept only for developing purposes.
%
% lrenorm  This form kronecker product of left block and site and transorms it to a new basis during the renormalization step. This is basically
%          A*BxC*D where D=A'. This is done sector-wise and for each operator compinaton there is a TaskTable so fully paralleized. This is the
%          time for left block renormalization.
%
% rrenorm  This is same as lrenorm but for the right block. This is kept separately just because in the old version different functions were developed
%          for the left and right renormalization and for debugging reasons.
%

%         number of subsystems (LR, lqr, lqqr, etc modes) and with size of TaskTable, i.e. with M. 80-95
%         spent on this funtion.
%
% set_DM  This form reduced density matrix used to do svd. There is also a function to do svd directly. In the future this will be replaced.
%         Now this is kept for debugging and development reasons.
%
% diag_D  Diagonalization of DM as part of the svd step. In the future this will be replaced with the direct svd function.
%         Now this is kept for debugging and development reasons.
%
% deas   Function to form initial mps, operators etc for the warmup half-sweep of DMRG. This scales with N and M.
%
% other  All other functions, to calculate expectations values, symmetry tests, new features under developments etc.
%
% clear  Time spent on deleting unused scratch files.
%
% IO     Time spent on IO.
%
% Bcast  Time spent on broadcasting data for mpi parallelization.
%
% Overh  Time spent redundantly on functions on workers and headnode for mpi parallelization.
%
% total   Total time of the full dmrg iteration step.
%==============================================================================================================================================================%
%Iter  psi_ind   vsum  hamtab tasktab  LBlock  RBlock lrenorm rrenorm   diag_H   set_DM  diag_D      deas     stvec   IO     funtest    Bcast    Overh    other   total
A_in = [...
    1    0.19    0.52    0.00    0.00    0.60    1.20    0.31    0.00     0.87     0.03     0.07     4.19     0.00     0.08     0.00     0.01     0.00    2.00    10.06
    2    0.08    0.11    0.00    0.00    0.09    1.43    0.18    0.00     0.06     0.01     0.03     4.03     0.16     0.06     0.00     0.00     0.00    0.27     6.52
    3    0.01    0.04    0.00    0.00    0.05    0.76    0.11    0.00     0.30     0.00     0.01     3.32     0.07     0.05     0.00     0.00     0.00    0.13     4.85
